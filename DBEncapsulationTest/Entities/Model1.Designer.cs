//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("PersonDBModel", "FK_dbo_Posts_dbo_BlogUsers_BlogUserId", "BlogUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.BlogUsers), "Posts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.Posts), true)]

#endregion

namespace Entities
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class PersonDBEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“PersonDBEntities”部分中的连接字符串初始化新 PersonDBEntities 对象。
        /// </summary>
        public PersonDBEntities() : base("name=PersonDBEntities", "PersonDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 PersonDBEntities 对象。
        /// </summary>
        public PersonDBEntities(string connectionString) : base(connectionString, "PersonDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 PersonDBEntities 对象。
        /// </summary>
        public PersonDBEntities(EntityConnection connection) : base(connection, "PersonDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<BlogUsers> BlogUsers
        {
            get
            {
                if ((_BlogUsers == null))
                {
                    _BlogUsers = base.CreateObjectSet<BlogUsers>("BlogUsers");
                }
                return _BlogUsers;
            }
        }
        private ObjectSet<BlogUsers> _BlogUsers;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Posts> Posts
        {
            get
            {
                if ((_Posts == null))
                {
                    _Posts = base.CreateObjectSet<Posts>("Posts");
                }
                return _Posts;
            }
        }
        private ObjectSet<Posts> _Posts;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 BlogUsers EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToBlogUsers(BlogUsers blogUsers)
        {
            base.AddObject("BlogUsers", blogUsers);
        }
    
        /// <summary>
        /// 用于向 Posts EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPosts(Posts posts)
        {
            base.AddObject("Posts", posts);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PersonDBModel", Name="BlogUsers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BlogUsers : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 BlogUsers 对象。
        /// </summary>
        /// <param name="blogUserId">BlogUserId 属性的初始值。</param>
        public static BlogUsers CreateBlogUsers(global::System.Int32 blogUserId)
        {
            BlogUsers blogUsers = new BlogUsers();
            blogUsers.BlogUserId = blogUserId;
            return blogUsers;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlogUserId
        {
            get
            {
                return _BlogUserId;
            }
            set
            {
                if (_BlogUserId != value)
                {
                    OnBlogUserIdChanging(value);
                    ReportPropertyChanging("BlogUserId");
                    _BlogUserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BlogUserId");
                    OnBlogUserIdChanged();
                }
            }
        }
        private global::System.Int32 _BlogUserId;
        partial void OnBlogUserIdChanging(global::System.Int32 value);
        partial void OnBlogUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BlogName
        {
            get
            {
                return _BlogName;
            }
            set
            {
                OnBlogNameChanging(value);
                ReportPropertyChanging("BlogName");
                _BlogName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BlogName");
                OnBlogNameChanged();
            }
        }
        private global::System.String _BlogName;
        partial void OnBlogNameChanging(global::System.String value);
        partial void OnBlogNameChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PersonDBModel", "FK_dbo_Posts_dbo_BlogUsers_BlogUserId", "Posts")]
        public EntityCollection<Posts> Posts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Posts>("PersonDBModel.FK_dbo_Posts_dbo_BlogUsers_BlogUserId", "Posts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Posts>("PersonDBModel.FK_dbo_Posts_dbo_BlogUsers_BlogUserId", "Posts", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PersonDBModel", Name="Posts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Posts : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Posts 对象。
        /// </summary>
        /// <param name="postId">PostId 属性的初始值。</param>
        /// <param name="blogUserId">BlogUserId 属性的初始值。</param>
        public static Posts CreatePosts(global::System.Int32 postId, global::System.Int32 blogUserId)
        {
            Posts posts = new Posts();
            posts.PostId = postId;
            posts.BlogUserId = blogUserId;
            return posts;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostId
        {
            get
            {
                return _PostId;
            }
            set
            {
                if (_PostId != value)
                {
                    OnPostIdChanging(value);
                    ReportPropertyChanging("PostId");
                    _PostId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PostId");
                    OnPostIdChanged();
                }
            }
        }
        private global::System.Int32 _PostId;
        partial void OnPostIdChanging(global::System.Int32 value);
        partial void OnPostIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostTitle
        {
            get
            {
                return _PostTitle;
            }
            set
            {
                OnPostTitleChanging(value);
                ReportPropertyChanging("PostTitle");
                _PostTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostTitle");
                OnPostTitleChanged();
            }
        }
        private global::System.String _PostTitle;
        partial void OnPostTitleChanging(global::System.String value);
        partial void OnPostTitleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlogUserId
        {
            get
            {
                return _BlogUserId;
            }
            set
            {
                OnBlogUserIdChanging(value);
                ReportPropertyChanging("BlogUserId");
                _BlogUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlogUserId");
                OnBlogUserIdChanged();
            }
        }
        private global::System.Int32 _BlogUserId;
        partial void OnBlogUserIdChanging(global::System.Int32 value);
        partial void OnBlogUserIdChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PersonDBModel", "FK_dbo_Posts_dbo_BlogUsers_BlogUserId", "BlogUsers")]
        public BlogUsers BlogUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogUsers>("PersonDBModel.FK_dbo_Posts_dbo_BlogUsers_BlogUserId", "BlogUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogUsers>("PersonDBModel.FK_dbo_Posts_dbo_BlogUsers_BlogUserId", "BlogUsers").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BlogUsers> BlogUsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlogUsers>("PersonDBModel.FK_dbo_Posts_dbo_BlogUsers_BlogUserId", "BlogUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BlogUsers>("PersonDBModel.FK_dbo_Posts_dbo_BlogUsers_BlogUserId", "BlogUsers", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
